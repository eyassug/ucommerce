@using UCommerce.EntitiesV2
@using UCommerce.Pipelines
@using UCommerce.Runtime
@functions{
    public static void LeaveReview(UCommerce.EntitiesV2.Product product, string nameKey, string emailKey, string ratingKey, string headlineKey, string reviewTextKey)
    {
        var request = HttpContext.Current.Request;
        var basket = SiteContext.Current.OrderContext.GetBasket();

        if (request.Form.AllKeys.All(x => x != "review-product"))
        {
            return;
        }
        
        var name = request.Form[nameKey];
        var email = request.Form[emailKey];
        var rating = Convert.ToInt32(request.Form[ratingKey]) * 20;
        var reviewHeadline = request.Form[headlineKey];
        var reviewText = request.Form[reviewTextKey];

        if (basket.PurchaseOrder.Customer == null)
        {
            basket.PurchaseOrder.Customer = new Customer() { FirstName = name, LastName = String.Empty, EmailAddress = email };
        }
        else
        {
            basket.PurchaseOrder.Customer.FirstName = name;
            if (basket.PurchaseOrder.Customer.LastName == null)
            {
                basket.PurchaseOrder.Customer.LastName = String.Empty;
            }
            basket.PurchaseOrder.Customer.EmailAddress = email;
        }

        basket.PurchaseOrder.Customer.Save();

        var review = new ProductReview()
                         {
                             ProductCatalogGroup = SiteContext.Current.CatalogContext.CurrentCatalogGroup, 
                             ProductReviewStatus = ProductReviewStatus.SingleOrDefault(s => s.Name == "New"), 
                             CreatedOn = DateTime.Now, 
                             CreatedBy = "System", 
                             Product = product, 
                             Customer = basket.PurchaseOrder.Customer, 
                             Rating = rating, 
                             ReviewHeadline = reviewHeadline, 
                             ReviewText = reviewText, 
                             Ip = request.UserHostName
                         };

        product.AddProductReview(review);
        
        PipelineFactory.Create<ProductReview>("ProductReview").Execute(review);
    }
}
