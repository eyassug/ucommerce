@using UCommerce.Catalog
@using UCommerce.EntitiesV2
@using UCommerce.Transactions
@{
    var basket = TransactionLibrary.GetBasket(true).PurchaseOrder;

    if (HttpContext.Current.Request.HttpMethod == "POST" && HttpContext.Current.Request.Form.AllKeys.Any(x => x.StartsWith("updateBasket")))
    {
        foreach (var orderLineId in basket.OrderLines.Select(x=>x.OrderLineId).ToList())
        {
            int newQuantity;
            if(int.TryParse(HttpContext.Current.Request.Form["quantityInput_" + orderLineId], out newQuantity))
            {
                TransactionLibrary.UpdateLineItem(orderLineId, newQuantity);
            }
        }

        
        TransactionLibrary.ExecuteBasketPipeline();
        if (HttpContext.Current.Request.Form.AllKeys.Any(x => x == "updateBasketAndContinue"))
        {
            HttpContext.Current.Response.Redirect("Address.aspx");
        }
        else
        {
            HttpContext.Current.Response.Redirect(HttpContext.Current.Request.RawUrl);
        }
        
    }
    
}
<form method="post">
    <div class="row-fluid well">
    
        <table class="table  table-condensed">
            <thead>
                <tr>
                    <th>Item no.</th>
                    <th>Description</th>
                    <th>Item price</th>
                    <th>VAT</th>
                    <th>Quantity</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var lineItem in basket.OrderLines)
                {
                
                    <tr>
                        <td>
                            @lineItem.Sku
                        </td>
                        <td>
                            @lineItem.ProductName
                        </td>
                        <td>
                            @CatalogLibrary.FormatCurrency(lineItem.Price)
                            @*<xsl:choose>
								    <xsl:when test="unitDiscount != 0">
									    <span style="text-decoration:line-through">
										    <xsl:value-of select="CommerceLibrary:FormatCurrency(@price)"/>
									    </span>&nbsp;
									    <xsl:value-of select="CommerceLibrary:FormatCurrency(@price - @unitDiscount)"/>
								    </xsl:when>
								    <xsl:otherwise>
									    <xsl:value-of select="CommerceLibrary:FormatCurrency(@price)"/>
								    </xsl:otherwise>
							    </xsl:choose>*@
                        </td>
                        <td>
                            @CatalogLibrary.FormatCurrency(lineItem.VAT)
                        </td>
                        <td>
                            <input type="text" class="input-mini" name="quantityInput_@(lineItem.OrderLineId)" value="@lineItem.Quantity">
                                @*<xsl:attribute name="value">
									    <xsl:value-of select="@quantity"/>
								    </xsl:attribute>*@
                                @*<xsl:attribute name="name">quantityInput_<xsl:value-of select="@index"/></xsl:attribute>*@
                            </input>
                        </td>
                        <td>
                            @CatalogLibrary.FormatCurrency(lineItem.Total)
                        </td>
                    </tr>

                    //{index = index+1;}
                }
                <tr>
                    <td colspan="6">
                        discounts  (TODO)
                        @*<xsl:call-template name="discountTemplate">
								    <xsl:with-param name="discounts" select="discounts"/>
								    <xsl:with-param name="id" select="@index"/>
							    </xsl:call-template>*@
                    </td>
                </tr>

                <tr>
                    <td colspan="5">Sub total:</td>
                    <td>
                        @CatalogLibrary.FormatCurrency(basket.SubTotal)
                    </td>
                </tr>
                <tr>
                    <td colspan="5">VAT:</td>
                    <td>
                        @CatalogLibrary.FormatCurrency(basket.VAT)
                    </td>
                </tr>
                <tr>
                    <td colspan="5">Order discounts:</td>
                    <td>
                        -discount (TODO)
                    </td>
                </tr>
                <tr>
                    <td colspan="6">
                        discounts (TODO)
                        @*<xsl:call-template name="discountTemplate">
							    <xsl:with-param name="discounts" select="$cart/purchaseOrder/discounts"/>
							    <xsl:with-param name="id" select="@orderGuid"/>
						    </xsl:call-template>*@
                    </td>
                </tr>
                <tr>
                    <td colspan="5">Order total:</td>
                    <td>
                        @CatalogLibrary.FormatCurrency(basket.OrderTotal)
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="row-fluid well">
			<input type="text" name="voucherCode"></input>
			<input type="submit" value="Add voucher"></input>
    </div>
    <input name="updateBasket" class="btn" type="submit" value="Update cart"/>
    
    <input name="updateBasketAndContinue" class="btn btn-primary" type="submit" value="Next"/>
		</form>