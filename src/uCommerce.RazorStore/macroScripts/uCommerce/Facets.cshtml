@using UCommerce;
@using UCommerce.Api
@using UCommerce.EntitiesV2
@using UCommerce.Infrastructure
@using UCommerce.Runtime
@using UCommerce.Search
@using UCommerce.Search.Facets
@{
	// Convert querystring parameters to facets
	IList<Facet> facetsForQuerying = Request.QueryString.ToFacets();
	var category = SiteContext.Current.CatalogContext.CurrentCategory;
	var product = SiteContext.Current.CatalogContext.CurrentProduct;

	if (category != null && product == null)
	{
		IList<Facet> facets = SearchLibrary.GetFacetsFor(category, facetsForQuerying);
		
		if (facets.Any(x => x.FacetValues.Any(y => y.Hits > 0)))
		{
			<div>
				@foreach (var facet in facets)
				{
					// Remove facet values with no hits.
					var facetValues = facet.FacetValues.Where(x => x.Hits > 0);
					if (!facetValues.Any())
					{
						continue;
					}

					<div class="well">
						<legend>@facet.DisplayName</legend>

						@foreach (var val in facetValues)
						{
							if (val.Hits == 0)
							{
								<label class="disabled facet">
									<input type="checkbox" id="filter-@facet.Name-@val.Value" key="@facet.Name" class="filter" value="@val.Value" disabled="disabled">				
									@val.Value (@val.Hits)
								</label>
							}
							else
							{
								<label class="facet">
									<input type="checkbox" id="filter-@facet.Name-@val.Value" key="@facet.Name" class="filter" value="@val.Value">				
									@val.Value (@val.Hits)	
								</label>
							}

						}
					</div>
				}
			</div>
		}
	}
}