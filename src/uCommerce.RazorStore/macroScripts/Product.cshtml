@using UCommerce.EntitiesV2
@using UCommerce.Extensions
@using UCommerce.Runtime
@using umbraco.MacroEngines
@using UCommerce.Api
@{
    var basket = SiteContext.Current.OrderContext.GetBasket();
    var product = SiteContext.Current.CatalogContext.CurrentProduct;
    var request = HttpContext.Current.Request;
    var inBasket = basket.PurchaseOrder.OrderLines.Any(o => o.Sku == product.Sku);
    var price = CatalogLibrary.CalculatePrice(product);
        
    if (request.HttpMethod == "POST")
    {
        if (request.Form.AllKeys.Any(x => x == "add-to-basket"))
        {
            var selectedSize = request.Form["selected-size"];
            var selectedColour = request.Form["selected-colour"];

            var variant = product.Variants.First(v => v.ProductProperties.Any(p => p.ProductDefinitionField.Name == "CollarSize" && p.Value == selectedSize) && v.ProductProperties.Any(p => p.ProductDefinitionField.Name == "Colour" && p.Value == selectedColour));
            var quantity = Convert.ToInt32(request.Form["quantity-to-add"]);
            TransactionLibrary.AddToBasket(quantity, product.Sku, variant.VariantSku);
            TransactionLibrary.ExecuteBasketPipeline();
            HttpContext.Current.Response.Redirect(HttpContext.Current.Request.RawUrl);
        }

        if (request.Form.AllKeys.Any(x => x == "review-product"))
        {
            var name = request.Form["review-name"];
            var email = request.Form["review-email"];
            var rating = Convert.ToInt32(request.Form["review-rating"]);
            var reviewHeadline = request.Form["review-headline"];
            var reviewText = request.Form["review-text"];

            if (basket.PurchaseOrder.Customer == null)
            {
                basket.PurchaseOrder.Customer = new Customer() { FirstName = name, LastName = String.Empty, EmailAddress = email };
            }
            else
            {
                basket.PurchaseOrder.Customer.FirstName = name;
                if (basket.PurchaseOrder.Customer.LastName == null)
                {
                    basket.PurchaseOrder.Customer.LastName = String.Empty;
                }
                basket.PurchaseOrder.Customer.EmailAddress = email;
            }

            basket.PurchaseOrder.Customer.Save();

            var review = new ProductReview()
            {
                ProductCatalogGroup = SiteContext.Current.CatalogContext.CurrentCatalogGroup,
                ProductReviewStatus = ProductReviewStatus.SingleOrDefault(s => s.Name == "New"),
                CreatedOn = DateTime.Now,
                CreatedBy = "System",
                Product = product,
                Customer = basket.PurchaseOrder.Customer,
                Rating = rating,
                ReviewHeadline = reviewHeadline,
                ReviewText = reviewText,
                Ip = request.UserHostName
            };

            product.AddProductReview(review);
            product.Save();
        }
    }

    var incVAT = SiteContext.Current.CatalogContext.CurrentCatalog.ShowPricesIncludingVAT ? "<abbr=\"Including\">Inc</abbr>" : "<abbr=\"Excluding\">Exc</abbr>";
    var relatedProducts = @product.GetRelatedProducts().SelectMany(x => x.Value).ToList();

    var variants = product.Variants;
    var uniqueColours = variants.Select(v => v.ProductProperties.First(p => p.ProductDefinitionField.Name == "Colour").Value).Distinct();
    var uniqueSizes = variants.Select(v => v.ProductProperties.First(p => p.ProductDefinitionField.Name == "CollarSize").Value).Distinct();
}
<div id="product-details" class="row-fluid" itemscope itemtype="http://schema.org/Product">
    <div class="span6">
        @if (!string.IsNullOrEmpty(product.PrimaryImageMediaId))
        {
            dynamic mediaItem = new DynamicMedia(product.PrimaryImageMediaId);
            <img src="@mediaItem.umbracoFile" />
        }
    </div>
    <section class="span6">
        <div class="span12 page-header">
            <header class="span8">
                <h1 itemprop="name">@product.DisplayName()</h1>
                <h6><small>@if (product.ProductReviews.Any())
                {
                    var rating = product.ProductReviews.Average(r => r.Rating);
                    for (int i = 1; i <= 5; i++)
                    {
                        if (rating >= i)
                        {
                    <i class="icon-star"></i>
                        }
                        else
                        {
                    <i class="icon-star-empty"></i>
                        }
                    }
                }</small> @product.DynamicProperty().Brand</h6>
                <small><em>@product.ShortDescription()</em></small>
            </header>
            <aside class="span4" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                <p class="item-price" itemprop="price">@price.YourPrice.AmountExclTax.Value.ToString("#,##.00")</p>
                <p class="item-tax">(@Html.Raw(incVAT) @price.YourTax.Value.ToString("#,##.00") Tax)</p>
            </aside>
        </div>
        <form method="post" class="form-horizontal">
        <div class="span12 well">
            @if (inBasket)
            {
                <div class="alert alert-info">
                    <button type="button" class="close" data-dismiss="alert">×</button>
                    <p><strong>Note!</strong> This item is already in your basket. <a class="btn btn-primary pull-right" href="/shop/checkout/cart.aspx">View Your Cart</a></p>
                </div>
            }
            @if (variants.Any())
            {
                <div class="control-group">
                    <label class="control-label" for="selected-size">Size</label>
                    <div class="controls">
                        <select name="selected-size" id="selected-size">
                            <option value="">-- Please Select --</option>
                            @foreach (var size in uniqueSizes)
                            {
                                <option value="@size">@size"</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="selected-colour">Colour</label>
                    <div class="controls">
                        <select name="selected-colour" id="selected-colour">
                            <option value="">-- Please Select --</option>
                            @foreach (var colour in uniqueColours)
                            {
                                <option value="@colour">@colour</option>
                            }
                        </select>
                    </div>
                </div>
            }
            <input name="product-sku" id="product-sku" type="hidden" value="@product.Sku" />
            <input name="quantity-to-add" id="quantity-to-add" type="hidden" value="1" />
            <!-- We have to default the button to "success" for those customers who don't have JavaScript enabled -in which case it will still be a clear call to action  -->
            <input name="add-to-basket" id="add-to-basket" class="btn btn-block btn-success" type="submit" value="Add to basket" />
        </div>
        </form>
        <div class="tabbable">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#product-description" data-toggle="tab">Details</a></li>
                <li><a href="#delivery-info" data-toggle="tab">Delivery</a></li>
                <li><a href="#returns-info" data-toggle="tab">Returns</a></li>
                <li><a href="#customer-reviews" data-toggle="tab">Reviews</a></li>
            </ul>
            <div class="tab-content">
                <article itemprop="description" id="product-description" class="tab-pane active">
                    @Html.Raw(product.LongDescription())
                </article>
                <div id="delivery-info" class="tab-pane">
                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas placerat elementum tristique. Ut ut pretium massa. Nullam mollis lobortis rutrum. Integer quis tellus enim. Donec viverra aliquam faucibus. Nam ac eros velit. Mauris vel adipiscing turpis. Mauris id tortor et augue tincidunt molestie in sed lectus.</p>
                </div>
                <div id="returns-info" class="tab-pane">
                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas placerat elementum tristique. Ut ut pretium massa. Nullam mollis lobortis rutrum. Integer quis tellus enim. Donec viverra aliquam faucibus. Nam ac eros velit. Mauris vel adipiscing turpis. Mauris id tortor et augue tincidunt molestie in sed lectus.</p>
                </div>
                <div id="customer-reviews" class="tab-pane">
                    @if (product.ProductReviews.Any())
                    {
                        foreach (var review in product.ProductReviews)
                        {
                        <section itemprop="review" itemscope itemtype="http://schema.org/Review">
                            <header>
                                <div itemprop="reviewRating" itemscope itemtype="http://schema.org/Rating">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (review.Rating >= i)
                                        {
                                        <i class="icon-star"></i>
                                        }
                                        else
                                        {
                                        <i class="icon-star-empty"></i>
                                        }
                                    }
                                </div>
                                <p itemprop="name">@review.ReviewHeadline</p>
                            </header>
                            <aside>
                                <p>by <span itemprop="author">@review.Customer.FirstName</span> at @review.CreatedOn</p>
                            </aside>
                            <p itemprop="description">@review.ReviewText</p>
                            <meta itemprop="ratingValue" content="@review.Rating">
                            <meta itemprop="worstRating" content="1">
                            <meta itemprop="bestRating" content="5">
                            <meta itemprop="datePublished" content="@review.CreatedOn.ToString("yyyy-MM-dd")" />
                        </section>

                        }
                    }
                    else
                    {
                        <p>No-one has reviewed this product yet.</p>
                    }
                    <form method="post" class="form-horizontal">
                    <div class="control-group">
                        <label class="control-label" for="review-name">Your Name</label>
                        <div class="controls">
                            <input type="text" id="review-name" name="review-name" placeholder="Name" class="span12">
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="review-email">Your Email</label>
                        <div class="controls">
                            <input type="text" id="review-email" name="review-email" placeholder="Email" class="span12">
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="review-rating">Rating</label>
                        <div class="controls btn-group">
                            <label class="btn btn-small">
                                <input type="radio" name="review-rating" value="1" /><i class="icon-star"></i></label>
                            <label class="btn btn-small">
                                <input type="radio" name="review-rating" value="2" /><i class="icon-star"></i></label>
                            <label class="btn btn-small">
                                <input type="radio" name="review-rating" value="3" /><i class="icon-star"></i></label>
                            <label class="btn btn-small">
                                <input type="radio" name="review-rating" value="4" /><i class="icon-star"></i></label>
                            <label class="btn btn-small">
                                <input type="radio" name="review-rating" value="5" /><i class="icon-star"></i></label>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="review-headline">Review Title</label>
                        <div class="controls">
                            <input type="text" id="review-headline" name="review-headline" placeholder="Title" class="span12">
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="review-text">Comments</label>
                        <div class="controls">
                            <textarea rows="3" class="span12" id="review-text" name="review-text"></textarea>
                            <button type="submit" class="btn btn-primary" name="review-product">Save</button>
                        </div>
                    </div>
                    </form>
                </div>
            </div>
        </div>
    </section>
</div>
<div class="row-fluid">
    @if (relatedProducts.Any())
    {
        <div class="span4 well">
            <h4>Related products</h4>
            @foreach (var relatedProduct in @product.GetRelatedProducts().SelectMany(x => x.Value))
            {
                <a href="@CatalogLibrary.GetNiceUrlForProduct(relatedProduct)">@relatedProduct.DisplayName()</a>
            }
        </div>
    }
</div>
