@using UCommerce.EntitiesV2
@using UCommerce.Extensions
@using UCommerce.Runtime
@using umbraco.MacroEngines
@using UCommerce.Api
@{
    var product = SiteContext.Current.CatalogContext.CurrentProduct;
    var request = HttpContext.Current.Request;

    if (request.HttpMethod == "POST" && request.Form.AllKeys.Any(x => x == "add-to-basket"))
    {
        var selectedSize = request.Form["selected-size"];
        var selectedColour = request.Form["selected-colour"];

        var variant = product.Variants.First(v => v.ProductProperties.Any(p => p.ProductDefinitionField.Name == "CollarSize" && p.Value == selectedSize) && v.ProductProperties.Any(p => p.ProductDefinitionField.Name == "Colour" && p.Value == selectedColour));
        var quantity = Convert.ToInt32(request.Form["quantity-to-add"]);
        TransactionLibrary.AddToBasket(quantity, product.Sku, variant.VariantSku);
        TransactionLibrary.ExecuteBasketPipeline();
        HttpContext.Current.Response.Redirect(HttpContext.Current.Request.RawUrl);
    }

    var incVAT = SiteContext.Current.CatalogContext.CurrentCatalog.ShowPricesIncludingVAT ? "<abbr=\"Including\">Inc</abbr>" : "<abbr=\"Excluding\">Exc</abbr>";
    var relatedProducts = @product.GetRelatedProducts().SelectMany(x => x.Value).ToList();

    var variants = product.Variants;
    var uniqueColours = variants.Select(v => v.ProductProperties.First(p => p.ProductDefinitionField.Name == "Colour").Value).Distinct();
    var uniqueSizes = variants.Select(v => v.ProductProperties.First(p => p.ProductDefinitionField.Name == "CollarSize").Value).Distinct();
}
<div class="row-fluid">
    <div class="span6">
        @if (!string.IsNullOrEmpty(product.PrimaryImageMediaId))
        {
            dynamic mediaItem = new DynamicMedia(product.PrimaryImageMediaId);
            <img src="@mediaItem.umbracoFile" />
        }
    </div>
    <section class="span6">
        <header class="span12 page-header">
            <div class="span8">
                <h1>@product.DisplayName()</h1>
                <h6>@product.DynamicProperty().Brand</h6>
                <small><em>@product.ShortDescription()</em></small>
            </div>
            <aside class="span4">
                <p class="item-price">@product.Price()</p>
                <p class="item-tax">(@Html.Raw(incVAT) @product.Tax() Tax)</p>
            </aside>
        </header>
        <form method="post" class="form-horizontal">
        <div class="span12 well">
            @if (variants.Any())
            {
                <div class="control-group">
                    <label class="control-label" for="selected-size">Size</label>
                    <div class="controls">
                        <select name="selected-size" id="selected-size">
                            <option value="">-- Please Select --</option>
                            @foreach (var size in uniqueSizes)
                            {
                                <option value="@size">@size"</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label" for="selected-colour">Colour</label>
                    <div class="controls">
                        <select name="selected-colour" id="selected-colour">
                            <option value="">-- Please Select --</option>
                            @foreach (var colour in uniqueColours)
                            {
                                <option value="@colour">@colour</option>
                            }
                        </select>
                    </div>
                </div>
            }
            <input name="product-sku" id="product-sku" type="hidden" value="@product.Sku" />
            <input name="quantity-to-add" id="quantity-to-add" type="hidden" value="1" />
            <!-- We have to default the button to "success" for those customers who don't have JavaScript enabled -in which case it will still be a clear call to action  -->
            <input name="add-to-basket" id="add-to-basket" class="btn btn-block btn-success" type="submit" value="Add to basket" />
        </div>
        </form>
        <article class="span12">
            @Html.Raw(product.LongDescription())
        </article>
    </section>
</div>
<div class="row-fluid">
    @if (relatedProducts.Any())
    {
        <div class="span4 well">
            <h4>Related products</h4>
            @foreach (var relatedProduct in @product.GetRelatedProducts().SelectMany(x => x.Value))
            {
                <a href="@CatalogLibrary.GetNiceUrlForProduct(relatedProduct)">@relatedProduct.DisplayName()</a>
            }
        </div>
    }
</div>
